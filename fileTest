public String generateToken(String username, String claims) {
        Payload payload = new Payload();
        payload.setUsername(username);
        payload.setClaims(claims);
        payload.setRole("admin");
        payload.setExpirationDate(new Date(System.currentTimeMillis() + TOKEN_EXPIRATION_MS));

        return Jwts.builder()
                .setPayload(payload.toString())
                .signWith(SignatureAlgorithm.HS512, SECRET_KEY)
                .compact();
    }


 public boolean isValidToken(String token) {
        try {
            Claims claims = Jwts.parser()
                    .setSigningKey(SECRET_KEY)
                    .parseClaimsJws(token)
                    .getBody();

            Payload payload = new ObjectMapper().readValue(claims.get("payload", String.class), Payload.class);

            Date expirationDate = payload.getExpirationDate();
            Date now = new Date();
            return !expirationDate.before(now);
        } catch (Exception e) {
            return false;
        }
    }
